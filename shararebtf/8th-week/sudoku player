import turtle
import random

def draw_grid():
    turtle.penup()
    turtle.goto(-150, 150)
    turtle.pendown()
    turtle.pensize(3)
    for _ in range(4):
        turtle.forward(300)
        turtle.right(90)

    turtle.pensize(1)
    for i in range(1, 9):
        if i % 3 == 0:
            turtle.pensize(3)
        else:
            turtle.pensize(1)
        turtle.penup()
        turtle.goto(-150 + i * 33.33, 150)
        turtle.pendown()
        turtle.right(90)
        turtle.forward(300)
        turtle.left(90)
    
    turtle.pensize(1)
    for i in range(1, 9):
        if i % 3 == 0:
            turtle.pensize(3)
        else:
            turtle.pensize(1)
        turtle.penup()
        turtle.goto(-150, 150 - i * 33.33)
        turtle.pendown()
        turtle.forward(300)

def fill_board(board):
    def is_valid(board, row, col, num):
        for i in range(9):
            if board[row][i] == num or board[i][col] == num:
                return False
        start_row, start_col = 3 * (row // 3), 3 * (col // 3)
        for i in range(3):
            for j in range(3):
                if board[i + start_row][j + start_col] == num:
                    return False
        return True

    def solve(board):
        for row in range(9):
            for col in range(9):
                if board[row][col] == 0:
                    random_nums = list(range(1, 10))
                    random.shuffle(random_nums)
                    for num in random_nums:
                        if is_valid(board, row, col, num):
                            board[row][col] = num
                            if solve(board):
                                return True
                            board[row][col] = 0
                    return False
        return True

    solve(board)

def remove_numbers(board, attempts=40):
    count = attempts
    while count > 0:
        row = random.randint(0, 8)
        col = random.randint(0, 8)
        while board[row][col] == 0:
            row = random.randint(0, 8)
            col = random.randint(0, 8)
        backup = board[row][col]
        board[row][col] = 0
        count -= 1

def display_board(board):
    turtle.color("blue")
    for i in range(9):
        for j in range(9):
            if board[i][j] != 0:
                turtle.penup()
                turtle.goto(-150 + j * 33.33 + 16, 150 - i * 33.33 - 26)
                turtle.pendown()
                turtle.write(board[i][j], align="center", font=("Arial", 16, "normal"))

def main():
    turtle.speed(0)
    turtle.hideturtle()
    draw_grid()
    board = [[0] * 9 for _ in range(9)]
    fill_board(board)
    remove_numbers(board, 40)  # Remove 40 numbers to create a puzzle
    display_board(board)
    turtle.done()

if __name__ == "__main__":
    main()
